services:

  traefik:
    image: traefik
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entryPoints.web.address=:80"
    ports:
      - "80:80"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - app-net

  web:
    build: ./web
    depends_on:
        back:
            condition: service_started
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.web.rule=PathPrefix(`/`)"
      - "traefik.http.routers.web.entrypoints=web"
    networks:
      - app-net

  back:
    build: ./use-cases/use-case-node-api
    depends_on:
      db:
        condition: service_healthy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=PathPrefix(`/api`)"
      - "traefik.http.routers.api.entrypoints=web"
    environment:
      DB_HOST: db
      DB_USER: appuser
      DB_PASSWORD: mysecretpassword
      DB_NAME: appdb
    networks:
      - app-net

  db:
    image: "postgres:alpine"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U appuser -d appdb"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always
    environment:
      POSTGRES_DB: appdb
      POSTGRES_USER: appuser
      POSTGRES_PASSWORD: mysecretpassword
    volumes:
      - ./use-cases/use-case-node-api/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
      - pgdata:/var/lib/postgresql/data
    networks:
      - app-net

  cadvisor:
    image: "gcr.io/cadvisor/cadvisor"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - app-net

  prometheus:
    image: "prom/prometheus"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.rule=PathPrefix(`/monitoring/prometheus`)"
      - "traefik.http.routers.prometheus.entrypoints=web"
      - "traefik.http.middlewares.strip-prometheus-prefix.stripPrefix.prefixes=/monitoring/prometheus"
      - "traefik.http.routers.prometheus.middlewares=strip-prometheus-prefix"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - app-net

  loki:
    image: grafana/loki
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.loki.rule=PathPrefix(`/monitoring/loki`)"
      - "traefik.http.routers.loki.entrypoints=web"
      - "traefik.http.middlewares.strip-loki-prefix.stripPrefix.prefixes=/monitoring/loki"
      - "traefik.http.routers.loki.middlewares=strip-loki-prefix"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - app-net

  promtail:
    image: grafana/promtail
    volumes:
      - /var/lib/docker/containers/:/var/lib/docker/containers/:ro
      - ./promtail-config.yml:/etc/promtail/config.yml:ro
    command: -config.file=/etc/promtail/config.yml
    networks:
      - app-net

  grafana:
    image: grafana/grafana
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=PathPrefix(`/monitoring/grafana`)"
      - "traefik.http.routers.grafana.entrypoints=web"
      - "traefik.http.middlewares.strip-grafana-prefix.stripPrefix.prefixes=/monitoring/grafana"
      - "traefik.http.routers.grafana.middlewares=strip-grafana-prefix"
    environment:
      - GF_SERVER_ROOT_URL=http://$EC2_PUBLIC_IP/monitoring/grafana
      - GF_SERVER_FROM_SUB_PATH=true
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_FEATURE_TOGGLES_ENABLE=alertingSimplifiedRouting,alertingQueryAndExpressionsStepMode
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /etc/grafana/provisioning/datasources
        cat << EOF > /etc/grafana/provisioning/datasources/ds.yaml
        apiVersion: 1
        datasources:
        - name: Loki
          type: loki
          access: proxy
          orgId: 1
          url: http://loki:3100
          basicAuth: false
          isDefault: true
          version: 1
          editable: false
        EOF
        /run.sh
    networks:
      - app-net

volumes:
  pgdata:

networks:
  app-net: